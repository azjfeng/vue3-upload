
#app[data-v-f611589c]{
        width: 60%;
        height: auto;
        min-height: 500px;
        background: #f2f4f8;
        margin-left: 20%;
        margin-top: 100px;
}


a[data-v-f6bece04] {
  text-decoration: none;
}
.title[data-v-f6bece04] {
  color: #8e8188;
  padding-top: 25px;
  display: block;
}
.search[data-v-f6bece04] {
  display: flex;
  width: 100%;
}
.upload_file[data-v-f6bece04] {
  background: #eee;
  display: block;
  width: 80%;
  height: 40px;
  border: 0px;
  outline: none;
}
.choose[data-v-f6bece04] {
  display: block;
  height: 40px;
  /* width: 10%; */
  background: #5a6a7a;
  color: #fff;
  line-height: 40px;
  text-align: center;
}
.btnUpload[data-v-f6bece04] {
  display: block;
  height: 40px;
  /* width: 10%; */
  background: #4cb6cb;
  color: #fff;
  line-height: 40px;
  text-align: center;
}
table[data-v-f6bece04] {
  border-collapse: collapse;
  margin: 0 auto;
  text-align: center;
  width: 100%;
  margin-top: 20px;
}
table td[data-v-f6bece04],
table th[data-v-f6bece04] {
  border: 1px solid #cad9ea;
  color: #666;
  height: 30px;
}
table thead th[data-v-f6bece04] {
  background-color: #cce8eb;
  width: 100px;
}
table tr[data-v-f6bece04]:nth-child(odd) {
  background: #fff;
}
table tr[data-v-f6bece04]:nth-child(even) {
  background: #f5fafa;
}
table tr td[data-v-f6bece04]{
    font-size: 12px;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/